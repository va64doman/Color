/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package colours;

/**
 *
 * @author Van Do
 */

import java.awt.Color;
import java.io.IOException;
import org.json.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;

public class ColourFrame extends javax.swing.JFrame 
{
    File file = new File();
    List<ColorRainbow> list = new ArrayList<>();
    ColorParser parse = new ColorParser();
    ColorRainbow colours = new ColorRainbow();
    DefaultListModel model = new DefaultListModel();
    JFrame frame = new JFrame("Colors");
    JPanel panel = new JPanel();
    /**
     * Creates new form ColourFrame
     */
    public ColourFrame() 
    {
        initComponents();
        btnJsonFile.setToolTipText("Read .json file and display colours' details.");
        btnTextFile.setToolTipText("Read .txt file and display colours' details.");
        listColour.setToolTipText("Display JSON string from colours.");
        txtJsonFile.setToolTipText("Enter .json file.");
        txtTextFile.setToolTipText("Enter .txt file.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTextFile = new javax.swing.JLabel();
        lblJsonFile = new javax.swing.JLabel();
        txtTextFile = new javax.swing.JTextField();
        txtJsonFile = new javax.swing.JTextField();
        btnTextFile = new javax.swing.JButton();
        btnJsonFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listColour = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rainbow of Colours");

        lblTextFile.setText("Enter text file");

        lblJsonFile.setText("Enter JSON File");

        btnTextFile.setText("Read Text File and Show Colour Data");
        btnTextFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTextFileActionPerformed(evt);
            }
        });

        btnJsonFile.setText("Read Json File and Show Colour Data");
        btnJsonFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJsonFileActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listColour);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTextFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTextFile, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblJsonFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtJsonFile)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTextFile)
                            .addComponent(btnJsonFile))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTextFile)
                    .addComponent(txtTextFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTextFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJsonFile)
                    .addComponent(txtJsonFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnJsonFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTextFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTextFileActionPerformed
        try 
        {
            list = file.getFromTextFile(txtTextFile.getText());
            if(!checkListNotEmpty())
            {
                String output = parse.serializeColours(list);
                listColour.setModel(model);
                model.addElement(output);
                
                List<ColorRainbow> rainbow = parse.deserializeColours(output);
                displayColor(rainbow);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please check file correctly.", "Problem With File", JOptionPane.INFORMATION_MESSAGE);
            }
        } 
        catch (IOException ex) 
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnTextFileActionPerformed

    private void btnJsonFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJsonFileActionPerformed
        list = file.getFromJsonFile(txtJsonFile.getText()); 
        if(!checkListNotEmpty())
        {
            String output = parse.serializeColours(list);
            listColour.setModel(model);
            model.addElement(output);
            
            List<ColorRainbow> rainbow = parse.deserializeColours(output);
            displayColor(rainbow);
        }
        else 
        {
            JOptionPane.showMessageDialog(null, "Please check file correctly.", "Problem With File", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnJsonFileActionPerformed

    private Boolean checkListNotEmpty()
    {
        if(list.isEmpty())
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    
    private void displayColor(List<ColorRainbow> rainbow)
    {
        JLabel[] labelList = new JLabel[rainbow.size()];
        int count = 0;
        for(ColorRainbow color : rainbow){
            JLabel label = new JLabel("     ");
            label.setToolTipText(color.getName() + " " + color.getHexCode());
            label.setBackground(Color.decode(color.getHexCode()));
            label.setOpaque(true);
            labelList[count] = label;
            count++;
        }
        for(JLabel labels : labelList)
        {
            panel.add(labels);
        }
        frame.add(panel);
        frame.setTitle("Display Colors");
        frame.pack();
        frame.setVisible(true);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ColourFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ColourFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ColourFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ColourFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new ColourFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnJsonFile;
    private javax.swing.JButton btnTextFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJsonFile;
    private javax.swing.JLabel lblTextFile;
    private javax.swing.JList<String> listColour;
    private javax.swing.JTextField txtJsonFile;
    private javax.swing.JTextField txtTextFile;
    // End of variables declaration//GEN-END:variables
}
